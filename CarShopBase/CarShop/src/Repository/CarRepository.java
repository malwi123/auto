package Repository;

import java.sql.Connection;
import java.sql.SQLException;

import domain.Car;
import domain.IHaveId;
import mapers.ResultSetMapper;

public class CarRepository  extends RepositoryBase{

	Connection connection;
	
	private String createTableSql;
	
	private String insertSql;
	private String updateSql;
	private String deleteSql;
	private String selectAllSql;
	public CarRepository(Connection connection, ResultSetMapper mapper) throws SQLException{
		super(connection, mapper);		
	}
	
	protected void Init()
	{
		createTableSql = "CREATE TABLE cars("
				+ "id INT GENERATED BY DEFAULT AS IDENTITY,"
				+ "brand VARCHAR(20),"
				+ "model VARCHAR(20),"
				+ "type VARCHAR(20),"
				+ "price INT"
				+ ")";

		insertSql = "INSERT INTO cars(brand,model,type,price) VALUES (?,?,?,?)";
		updateSql = "UPDATE cars SET (brand,model,type,price) = (?,?,?,?) WHERE id=?";
		deleteSql = "DELETE FROM cars WHERE id=?";
		selectAllSql = "SELECT * FROM cars";
	}
	
	protected void setupInsert(IHaveId car) throws SQLException {
		insert.setString(1, ((Car) car).getBrand());
		insert.setString(2, ((Car) car).getModel());
		insert.setString(3, ((Car) car).getType());
		insert.setInt(4, ((Car) car).getPrice());
	}
	
	protected void setupUpdate(IHaveId car) throws SQLException {
		update.setString(1, ((Car) car).getBrand());
		update.setString(2, ((Car) car).getModel());
		update.setString(3, ((Car) car).getType());
		update.setInt(4, ((Car) car).getPrice());
		update.setInt(5, ((Car) car).getId());
	}
	
	
	@Override
	protected String selectAllSql() {
		return selectAllSql;
	}
	
	@Override
	protected String deleteSql() {
		return deleteSql;
	}
	
	@Override
	protected String updateSql() {
		return updateSql;
	}
	
	@Override
	protected String insertSql() {
		return insertSql;
	}
	
	protected String tableName() {
		return "cars";
	}
	
	@Override
	protected String createTableSql() {
		return createTableSql;
	}
}